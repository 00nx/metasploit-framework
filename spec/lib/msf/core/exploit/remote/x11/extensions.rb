require 'spec_helper'

RSpec.describe Msf::Exploit::Remote::X11::Extensions do
  subject do
    mod = ::Msf::Exploit.new
    mod.extend described_class

    mod.send(:initialize)
    mod
  end

  let(:query_extension) do
    extension = 'BIG-REQUESTS'
    packet = "\x62" # QueryExtension (98)
    packet << "\x00" # unused
    packet << "\x05\x00" # request length
    packet << [extension.length].pack('C').to_s
    packet << "\x00"
    packet << "\x00" # unused
    packet << "\x00" # marked as unused, but seems to increment?
    packet << extension
    packet << "\x00" * (12 - extension.length)
  end

  let(:query_extension_resp) do
    "\x01\x00\x01\x00\x00\x00\x00\x00\x01\x86\x00\x00\x00\x00\x00\x00" \
    "\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
  end

  let(:enable_134) do
    "\x86\x00\x01\x00"
  end

  describe 'creates QueryExtension request' do
    it do
      request = Msf::Exploit::Remote::X11::Extensions::QUERYEXTENSION.new(extension: 'BIG-REQUESTS')
      expect(request.to_binary_s).to eq(query_extension)
    end
  end

  describe 'handles QueryExtension response' do
    it do
      response = Msf::Exploit::Remote::X11::Extensions::QUERYEXTENSIONRESPONSE.read(query_extension_resp)
      expect(response.major_opcode).to eq(134) # \x86
      expect(response.present).to eq(1)
    end
  end

  describe 'creates Extension Toggle request' do
    it do
      request = Msf::Exploit::Remote::X11::Extensions::EXTENSIONTOGGLE.read(enable_134)
      expect(request.opcode).to eq(134) # \x86
      expect(request.extension_minor).to eq(0)
      expect(request.request_length).to eq(1)
      request = Msf::Exploit::Remote::X11::Extensions::EXTENSIONTOGGLE.new(opcode: 134)
      expect(request.request_length).to eq(enable_134)
    end
  end
end
