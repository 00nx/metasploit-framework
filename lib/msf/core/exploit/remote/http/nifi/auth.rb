# -*- coding: binary -*-

module Msf::Exploit::Remote::HTTP::Nifi::Auth
  # Determines if the Apache Nifi instance supports login.
  #
  # @return the value of supportsLogin from the server
  def supports_login?
    response = send_request_cgi({
      'method' => 'GET',
      'uri' => normalize_uri(target_uri.path, 'nifi-api', 'access', 'config')
    })
    config = check_response('GETting access configuration', response, 200, 'config')
    config['supportsLogin']
  end

  # Attempts a login with username and password to retrieve a bearer token for APIs
  #
  # @return [String] The bearer token on successful login
  def retrieve_login_token
    response = send_request_cgi(
      {
        'method' => 'POST',
        'uri' => normalize_uri(target_uri.path, 'nifi-api', 'access', 'token'),
        'vars_post' => {
          'username' => datastore['USERNAME'],
          'password' => datastore['PASSWORD']
        }
      }
    )
    check_response('POSTing credentials', response, 201)
    response.body
  end
end
